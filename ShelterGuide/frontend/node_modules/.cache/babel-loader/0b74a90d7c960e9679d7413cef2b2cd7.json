{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\Update160\\\\shelterHelp\\\\frontend\\\\src\\\\components\\\\finder\\\\MyGoogleMap.js\";\n// MyGoogleMaps.js\nimport React, { Component, useEffect, useState } from 'react';\nimport Axios from \"axios\";\nimport GoogleMapReact from 'google-map-react';\nimport styled from 'styled-components';\nimport AutoComplete from './Autocomplete';\nimport Marker from './Marker';\nimport ShelterAPI from './ShelterAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.main`\n  width: 80%;\n  height: 80%;\n`; // const [offeredShelter, setShelter] = useState([]);\n// const isSheltertEmpty =\n//     !offeredShelter || (offeredShelter && offeredShelter.length === 0);\n// const fetchMap = async () => {\n//     const response = await Axios.get(\n//       \"https://shelterForHomeless.org/api/shelters/\"||\n//         \"http://localhost:5000/api/shelters/\"\n//     ).catch((err) => {\n//       console.log(\"Error: \", err);\n//     });\n//     if (response) {\n//         setShelter(response.data);\n//     }\n//   };\n\n_c = Wrapper;\n\nclass MyGoogleMap extends Component {\n  componentWillMount() {\n    this.setCurrentLocation();\n  }\n\n  _generateAddress() {\n    const {\n      mapApi\n    } = this.state;\n    const geocoder = new mapApi.Geocoder();\n    geocoder.geocode({\n      'location': {\n        lat: this.state.lat,\n        lng: this.state.lng\n      }\n    }, (results, status) => {\n      console.log(results);\n      console.log(status);\n\n      if (status === 'OK') {\n        if (results[0]) {\n          this.zoom = 12;\n          this.setState({\n            address: results[0].formatted_address\n          });\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n    });\n  } // Get Current Location Coordinates\n\n\n  setCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.setState({\n          center: [position.coords.latitude, position.coords.longitude],\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      });\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      mapApiLoaded: false,\n      mapInstance: null,\n      mapApi: null,\n      geoCoder: null,\n      places: [],\n      center: [],\n      zoom: 9,\n      address: '',\n      draggable: true,\n      lat: null,\n      lng: null\n    };\n\n    this.onMarkerInteraction = (childKey, childProps, mouse) => {\n      this.setState({\n        draggable: false,\n        lat: mouse.lat,\n        lng: mouse.lng\n      });\n    };\n\n    this.onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\n      this.setState({\n        draggable: true\n      });\n\n      this._generateAddress();\n    };\n\n    this._onChange = ({\n      center,\n      zoom\n    }) => {\n      this.setState({\n        center: center,\n        zoom: zoom\n      });\n    };\n\n    this._onClick = value => {\n      this.setState({\n        lat: value.lat,\n        lng: value.lng\n      });\n    };\n\n    this.apiHasLoaded = (map, maps) => {\n      this.setState({\n        mapApiLoaded: true,\n        mapInstance: map,\n        mapApi: maps\n      });\n\n      this._generateAddress();\n    };\n\n    this.addPlace = place => {\n      this.setState({\n        places: [place],\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      });\n\n      this._generateAddress();\n    };\n\n    this.state = {\n      shelters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(shelterAPI).then(res => res.json()).then(result => {\n      this.setState({\n        shelters: result\n      });\n    });\n  }\n\n  render() {\n    const {\n      places,\n      mapApiLoaded,\n      mapInstance,\n      mapApi\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [mapApiLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n          map: mapInstance,\n          mapApi: mapApi,\n          addplace: this.addPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMapReact, {\n        center: this.state.center,\n        zoom: this.state.zoom,\n        draggable: this.state.draggable,\n        onChange: this._onChange,\n        onChildMouseDown: this.onMarkerInteraction,\n        onChildMouseUp: this.onMarkerInteractionMouseUp,\n        onChildMouseMove: this.onMarkerInteraction,\n        onChildClick: () => console.log('child click'),\n        onClick: this._onClick,\n        bootstrapURLKeys: {\n          key: 'AIzaSyC4QzJoyABoeaVC-H90GIk5BBVBC9wI9zI',\n          libraries: ['places', 'geometry']\n        },\n        yesIWantToUseGoogleMapApiInternals: true,\n        onGoogleApiLoaded: ({\n          map,\n          maps\n        }) => this.apiHasLoaded(map, maps),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Marker, {\n            text: this.state.address,\n            lat: this.state.lat,\n            lng: this.state.lng\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ShelterAPI, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-details\",\n          children: [\"Latitude: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.lat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 60\n          }, this), \", Longitude: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.lng\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 102\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-details\",\n          children: [\"Zoom: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.zoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-details\",\n          children: [\"Address: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: this.state.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 59\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MyGoogleMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"sources":["D:/Project/Update160/shelterHelp/frontend/src/components/finder/MyGoogleMap.js"],"names":["React","Component","useEffect","useState","Axios","GoogleMapReact","styled","AutoComplete","Marker","ShelterAPI","Wrapper","main","MyGoogleMap","componentWillMount","setCurrentLocation","_generateAddress","mapApi","state","geocoder","Geocoder","geocode","lat","lng","results","status","console","log","zoom","setState","address","formatted_address","window","alert","navigator","geolocation","getCurrentPosition","position","center","coords","latitude","longitude","constructor","props","mapApiLoaded","mapInstance","geoCoder","places","draggable","onMarkerInteraction","childKey","childProps","mouse","onMarkerInteractionMouseUp","_onChange","_onClick","value","apiHasLoaded","map","maps","addPlace","place","geometry","location","shelters","componentDidMount","fetch","shelterAPI","then","res","json","result","render","key","libraries"],"mappings":"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","sourcesContent":["// MyGoogleMaps.js\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport Axios from \"axios\";\r\n\r\nimport GoogleMapReact from 'google-map-react';\r\n\r\nimport styled from 'styled-components';\r\n\r\nimport AutoComplete from './Autocomplete';\r\nimport Marker from './Marker';\r\nimport ShelterAPI from './ShelterAPI';\r\n\r\n\r\n\r\nconst Wrapper = styled.main`\r\n  width: 80%;\r\n  height: 80%;\r\n`;\r\n// const [offeredShelter, setShelter] = useState([]);\r\n// const isSheltertEmpty =\r\n//     !offeredShelter || (offeredShelter && offeredShelter.length === 0);\r\n\r\n// const fetchMap = async () => {\r\n//     const response = await Axios.get(\r\n//       \"https://shelterForHomeless.org/api/shelters/\"||\r\n//         \"http://localhost:5000/api/shelters/\"\r\n//     ).catch((err) => {\r\n//       console.log(\"Error: \", err);\r\n//     });\r\n\r\n//     if (response) {\r\n//         setShelter(response.data);\r\n//     }\r\n//   };\r\n\r\nclass MyGoogleMap extends Component {\r\n    state = {\r\n        mapApiLoaded: false,\r\n        mapInstance: null,\r\n        mapApi: null,\r\n        geoCoder: null,\r\n        places: [],\r\n        center: [],\r\n        zoom: 9,\r\n        address: '',\r\n        draggable: true,\r\n        lat: null,\r\n        lng: null\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.setCurrentLocation();\r\n    }\r\n\r\n\r\n    onMarkerInteraction = (childKey, childProps, mouse) => {\r\n        this.setState({\r\n            draggable: false,\r\n            lat: mouse.lat,\r\n            lng: mouse.lng\r\n        });\r\n    }\r\n    onMarkerInteractionMouseUp = (childKey, childProps, mouse) => {\r\n        this.setState({ draggable: true });\r\n        this._generateAddress();\r\n    }\r\n\r\n    _onChange = ({ center, zoom }) => {\r\n        this.setState({\r\n            center: center,\r\n            zoom: zoom,\r\n        });\r\n\r\n    }\r\n\r\n    _onClick = (value) => {\r\n        this.setState({\r\n            lat: value.lat,\r\n            lng: value.lng\r\n        });\r\n    }\r\n\r\n    apiHasLoaded = (map, maps) => {\r\n        this.setState({\r\n            mapApiLoaded: true,\r\n            mapInstance: map,\r\n            mapApi: maps,\r\n        });\r\n\r\n        this._generateAddress();\r\n    };\r\n\r\n    addPlace = (place) => {\r\n        this.setState({\r\n            places: [place],\r\n            lat: place.geometry.location.lat(),\r\n            lng: place.geometry.location.lng()\r\n        });\r\n        this._generateAddress()\r\n    };\r\n\r\n    _generateAddress() {\r\n        const {\r\n            mapApi\r\n        } = this.state;\r\n\r\n        const geocoder = new mapApi.Geocoder();\r\n\r\n        geocoder.geocode({ 'location': { lat: this.state.lat, lng: this.state.lng } }, (results, status) => {\r\n            console.log(results);\r\n            console.log(status);\r\n            if (status === 'OK') {\r\n                if (results[0]) {\r\n                    this.zoom = 12;\r\n                    this.setState({ address: results[0].formatted_address });\r\n                } else {\r\n                    window.alert('No results found');\r\n                }\r\n            } else {\r\n                window.alert('Geocoder failed due to: ' + status);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    // Get Current Location Coordinates\r\n    setCurrentLocation() {\r\n        if ('geolocation' in navigator) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                this.setState({\r\n                    center: [position.coords.latitude, position.coords.longitude],\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            shelters: [],\r\n        };\r\n      }\r\n      componentDidMount() {\r\n        fetch(shelterAPI)\r\n          .then(res => res.json())\r\n          .then(result => {\r\n            this.setState({\r\n              shelters: result\r\n            });\r\n          });\r\n      }\r\n\r\n\r\n    render() {\r\n        const {\r\n            places, mapApiLoaded, mapInstance, mapApi,\r\n        } = this.state;\r\n\r\n    \r\n          \r\n\r\n        return (\r\n            <Wrapper>\r\n                {mapApiLoaded && (\r\n                    <div>\r\n                        <AutoComplete map={mapInstance} mapApi={mapApi} addplace={this.addPlace} />\r\n                    </div>\r\n                )}\r\n                <GoogleMapReact\r\n                    center={this.state.center}\r\n                    zoom={this.state.zoom}\r\n                    draggable={this.state.draggable}\r\n                    onChange={this._onChange}\r\n                    onChildMouseDown={this.onMarkerInteraction}\r\n                    onChildMouseUp={this.onMarkerInteractionMouseUp}\r\n                    onChildMouseMove={this.onMarkerInteraction}\r\n                    onChildClick={() => console.log('child click')}\r\n                    onClick={this._onClick}\r\n                    bootstrapURLKeys={{\r\n                        key: 'AIzaSyC4QzJoyABoeaVC-H90GIk5BBVBC9wI9zI',\r\n                        libraries: ['places', 'geometry'],\r\n                    }}\r\n                    yesIWantToUseGoogleMapApiInternals\r\n                    onGoogleApiLoaded={({ map, maps }) => this.apiHasLoaded(map, maps)}\r\n                >\r\n                    <div>\r\n                    <Marker\r\n                        text={this.state.address}\r\n                        lat={this.state.lat}\r\n                        lng={this.state.lng}\r\n                    />\r\n                    </div>\r\n                   \r\n                    \r\n                    <ShelterAPI/>\r\n                    \r\n                    \r\n\r\n\r\n                </GoogleMapReact>\r\n\r\n                <div className=\"info-wrapper\">\r\n                    <div className=\"map-details\">Latitude: <span>{this.state.lat}</span>, Longitude: <span>{this.state.lng}</span></div>\r\n                    <div className=\"map-details\">Zoom: <span>{this.state.zoom}</span></div>\r\n                    <div className=\"map-details\">Address: <span>{this.state.address}</span></div>\r\n                </div>\r\n\r\n\r\n            </Wrapper >\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyGoogleMap;"]},"metadata":{},"sourceType":"module"}