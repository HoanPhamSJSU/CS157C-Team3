{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\CS157C\\\\CS157C-Team3\\\\ShelterGuide\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport React, { useState, useEffect } from \"react\";\nimport Axios from 'axios';\nimport { Formik } from 'formik';\nimport { Box, Button, Checkbox, Container, FormHelperText, Link, TextField, Typography } from '@material-ui/core';\nimport { values } from 'lodash';\nimport { SetMealSharp } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  Axios.defaults.withCredentials = true;\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordconfirm, setPasswordConfirm] = useState(\"\");\n  const [loginStatus, setLoginStatus] = useState(\"\");\n\n  const submitRegister = () => {\n    Axios.post(\"http://localhost:5000/Register\", {\n      name: name,\n      email: email,\n      password: password,\n      passwordconfirm: passwordconfirm\n    }).then(response => {\n      if (response.data.message) {\n        // window.location.reload(false);\n        setLoginStatus(response.data.message);\n      }\n\n      if (!response.data.message) {\n        //navigate('/app/register', { replace: true })\n        setLoginStatus(\"Success the account has been registered\");\n      }\n      /*\r\n      else {\r\n      setLoginStatus(response.data.message)\r\n      navigate('/app/dashboard', { replace: true })\r\n      }\r\n      */\n\n    });\n  };\n\n  const handleNameChange = e => {\n    console.log(\"Typed = ${e.target.value}\");\n    setName(e.target.value);\n  };\n\n  const handleEmailChange = e => {\n    console.log(\"Typed = ${e.target.value}\");\n    setEmail(e.target.value);\n  };\n\n  const handlePassChange = e => {\n    console.log(\"Typed = ${e.target.value}\");\n    setPassword(e.target.value);\n  };\n\n  const handlePassConfChange = e => {\n    console.log(\"Typed = ${e.target.value}\");\n    setPasswordConfirm(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loginStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            email: '',\n            firstName: '',\n            lastName: '',\n            password: '',\n            policy: false\n          },\n          onSubmit: submitRegister,\n          children: ({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textPrimary\",\n                variant: \"h2\",\n                children: \"Create new account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                gutterBottom: true,\n                variant: \"body2\",\n                children: \"Use your email to create new account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.firstName && errors.firstName),\n              fullWidth: true,\n              helperText: touched.firstName && errors.firstName //nameval = {nameval}\n              ,\n              onChange: handleNameChange //namevalue = {namevalue}\n              ,\n              variant: \"outlined\",\n              label: \"First name\",\n              margin: \"normal\",\n              name: \"firstName\",\n              type: \"name\",\n              onBlur: handleBlur,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.email && errors.email),\n              fullWidth: true,\n              helperText: touched.email && errors.email,\n              label: \"Email Address\",\n              margin: \"normal\",\n              name: \"email\",\n              onBlur: handleBlur,\n              onChange: handleEmailChange,\n              type: \"email\" //value={email}\n              ,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.password && errors.password),\n              fullWidth: true,\n              helperText: touched.password && errors.password,\n              label: \"Password\",\n              margin: \"normal\",\n              name: \"password\",\n              onBlur: handleBlur,\n              onChange: handlePassChange,\n              type: \"password\" //value={values.password}\n              ,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              error: Boolean(touched.passwordconfirm && errors.passwordconfirm),\n              fullWidth: true,\n              helperText: touched.passwordconfirm && errors.passwordconfirm,\n              label: \"Confirm Password\",\n              margin: \"normal\",\n              name: \"passwordconfirm\",\n              onBlur: handleBlur,\n              onChange: handlePassConfChange //setPasswordConfirm = {onChange}\n              ,\n              type: \"password\" //value={values.passwordconfirm}\n              ,\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                alignItems: 'center',\n                display: 'flex',\n                ml: -1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: values.policy,\n                name: \"policy\",\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body1\",\n                children: [\"I have read the\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                  color: \"primary\",\n                  component: RouterLink,\n                  to: \"#\",\n                  underline: \"always\",\n                  variant: \"h6\",\n                  children: \"Terms and Conditions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), Boolean(touched.policy && errors.policy) && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              error: true,\n              children: errors.policy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                py: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: isSubmitting,\n                fullWidth: true,\n                size: \"large\",\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Sign up now\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body1\",\n              children: [\"Have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n                component: RouterLink,\n                to: \"/login\",\n                variant: \"h6\",\n                children: \"Sign in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"9+9DSroRjSV7Dv1J7p/eRCL5/HI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Project/CS157C/CS157C-Team3/ShelterGuide/frontend/src/pages/Register.js"],"names":["Link","RouterLink","useNavigate","Helmet","Yup","React","useState","useEffect","Axios","Formik","Box","Button","Checkbox","Container","FormHelperText","TextField","Typography","values","SetMealSharp","Register","defaults","withCredentials","navigate","name","setName","email","setEmail","password","setPassword","passwordconfirm","setPasswordConfirm","loginStatus","setLoginStatus","submitRegister","post","then","response","data","message","handleNameChange","e","console","log","target","value","handleEmailChange","handlePassChange","handlePassConfChange","backgroundColor","display","flexDirection","height","justifyContent","firstName","lastName","policy","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","mb","Boolean","alignItems","ml","py"],"mappings":"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","sourcesContent":["import { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport Axios from 'axios'\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { values } from 'lodash';\r\nimport { SetMealSharp } from '@material-ui/icons';\r\n\r\nconst Register = () => {\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordconfirm, setPasswordConfirm] = useState(\"\");\r\nconst[loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  const submitRegister = () => { Axios.post(\"http://localhost:5000/Register\", { name: name, email:email, password: password, passwordconfirm:passwordconfirm\r\n  }).then((response) => {  \r\n    if(response.data.message) {\r\n      // window.location.reload(false);\r\n       setLoginStatus(response.data.message)\r\n    }\r\n    if(!response.data.message) {\r\n      //navigate('/app/register', { replace: true })\r\n      setLoginStatus(\"Success the account has been registered\")\r\n    }\r\n     /*\r\n    else {\r\n     setLoginStatus(response.data.message)\r\n     navigate('/app/dashboard', { replace: true })\r\n    }\r\n    */\r\n });\r\n };\r\n\r\nconst handleNameChange = e => {\r\n  console.log(\"Typed = ${e.target.value}\")\r\n  setName(e.target.value)\r\n};\r\nconst handleEmailChange = e => {\r\n  console.log(\"Typed = ${e.target.value}\")\r\n  setEmail(e.target.value)\r\n};\r\nconst handlePassChange = e => {\r\n  console.log(\"Typed = ${e.target.value}\")\r\n  setPassword(e.target.value)\r\n};\r\nconst handlePassConfChange = e => {\r\n  console.log(\"Typed = ${e.target.value}\")\r\n  setPasswordConfirm(e.target.value)\r\n};\r\n  return (\r\n    <>\r\n      <h1>{loginStatus}</h1>\r\n      <Helmet>\r\n        <title>Register</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            \r\n            onSubmit={\r\n              submitRegister\r\n            }\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit= {handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  //nameval = {nameval}\r\n                  onChange={handleNameChange}\r\n                  //namevalue = {namevalue}\r\n                  variant = \"outlined\"\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  type=\"name\"\r\n                  onBlur={handleBlur}\r\n\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange= {handleEmailChange}\r\n                  type=\"email\"\r\n                  //value={email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={ handlePassChange}\r\n                  type=\"password\"\r\n                  //value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.passwordconfirm && errors.passwordconfirm)}\r\n                  fullWidth\r\n                  helperText={touched.passwordconfirm && errors.passwordconfirm}\r\n                  label=\"Confirm Password\"\r\n                  margin=\"normal\"\r\n                  name=\"passwordconfirm\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handlePassConfChange}\r\n                  //setPasswordConfirm = {onChange}\r\n                  type=\"password\"\r\n                  //value={values.passwordconfirm}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    ml: -1\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}